{"version":3,"sources":["components/QuoteButton.js","components/Quote.js","components/Footer.js","components/Social.js","Home.js","DarkMode/Yes.js","DarkMode/No.js","DarkMode/DarkMode.js","FullScreenMode/FullYes.js","FullScreenMode/FullNo.js","FullScreenMode/FullScreenMode.js","Scheduler/HourBased.js","Scheduler/DayBased.js","Scheduler/Scheduler.js","Settings.js","App.js","serviceWorker.js","index.js"],"names":["QuoteButton","props","react_default","a","createElement","className","Button","id","onClick","updateQuote","styled","button","_templateObject","theme","color","Component","quote","author","Footer","href","target","Link","to","Social","state","concat","Home","Layout","Quote","div","Home_templateObject","YesButton","Yes_templateObject","darkMode","YesIcon","path","_templateObject2","Yes","darkModeOn","width","height","viewBox","fill","xmlns","d","NoButton","No_templateObject","NoIcon","No_templateObject2","No","darkModeOff","DarkMode","FullYes_templateObject","fullScreen","FullYes_templateObject2","FullYes","FullYes_YesButton","fullScreenOn","FullYes_YesIcon","FullNo_templateObject","FullNo_templateObject2","FullNo","FullNo_NoButton","fullScreenOff","FullNo_NoIcon","FullScreenMode","Scheduler","HourBased_templateObject","HourBased","console","log","value","type","min","max","onChange","activateHourBasedScheduler","DayBased_templateObject","TimeInput","input","attrs","DayBased_templateObject2","_templateObject3","DayBased_Scheduler","minLength","maxLength","required","scheduler","dayBased","time","activateDayBasedScheduler","SchedulerButton","Scheduler_templateObject","active","display","hourBased","interval","DayBased_HourBased","off","displayHourBasedScheduler","displayDayBasedScheduler","turnOffScheduler","Settings","Settings_Layout","Scheduler_Scheduler","Settings_templateObject","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","quotes","bind","assertThisInitialized","_this2","fetch","then","response","json","setState","random","Math","floor","length","catch","err","clearInterval","intervalId","clearTimeout","timerId","e","persist","_this3","now","Date","nowMilliseconds","getHours","getMinutes","targetMilliseconds","parseInt","split","setTimeout","_this4","setInterval","_this5","dist_default","enabled","styled_components_browser_esm","DarkTheme","LightTheme","BrowserRouter","GlobalStyles","Route","exact","render","backgroundColor","App_templateObject","Boolean","window","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4hBAGe,SAASA,EAAYC,GAClC,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACE,EAAD,CAAQC,GAAG,YAAYC,QAASP,EAAMQ,aAAtC,qBAON,IAAMH,EAASI,IAAOC,OAAVC,IACD,SAAAX,GAAK,OAAIA,EAAMY,MAAMC,OAMd,SAAAb,GAAK,OAAIA,EAAMY,MAAMC,QCTxBC,MATf,SAAmBd,GACjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,MAAIG,GAAG,QAAP,UAAiBN,EAAMe,MAAvB,WACAd,EAAAC,EAAAC,cAAA,MAAIG,GAAG,UAAUN,EAAMgB,kBCHd,SAASC,IACtB,OACEhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,sCAC4B,IAC1BF,EAAAC,EAAAC,cAAA,KAAGe,KAAK,kBAAkBC,OAAO,SAAjC,YAIFlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMC,GAAG,2DACPpB,EAAAC,EAAAC,cAAA,+BCXO,IAAAmB,EAAA,SAAStB,GACtB,IAAIe,EAAQf,EAAMuB,MAAMR,MACpBC,EAAShB,EAAMuB,MAAMP,OACzB,OACEf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,KACEe,KAAI,oFAAAM,OAAsFT,EACxF,MACAC,GACFG,OAAO,SAEPlB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,03BCNO,SAASsB,EAAKzB,GAC3B,OACEC,EAAAC,EAAAC,cAACuB,EAAD,KACEzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAME,GAAG,aACtBL,EAAAC,EAAAC,cAACwB,EAAD,CAAOZ,MAAOf,EAAMe,MAAOC,OAAQhB,EAAMgB,SACzCf,EAAAC,EAAAC,cAACmB,EAAD,CAAQC,MAAOvB,EAAMuB,QACrBtB,EAAAC,EAAAC,cAACJ,EAAD,CAAaS,YAAaR,EAAMQ,cAChCP,EAAAC,EAAAC,cAACc,EAAD,QAMR,IAAMS,EAASjB,IAAOmB,IAAVC,gPClBZ,IAAMC,EAAYrB,IAAOC,OAAVqB,IAEH,SAAA/B,GAAK,OAAKA,EAAMuB,MAAMS,SAAW,kBAAoB,QAG3DC,EAAUxB,IAAOyB,KAAVC,IACH,SAAAnC,GAAK,OAAMA,EAAMuB,MAAMS,SAAoB,QAAT,SAG7B,SAASI,EAAIpC,GAC1B,OACEC,EAAAC,EAAAC,cAAC2B,EAAD,CAAWP,MAAOvB,EAAMuB,MAAOhB,QAASP,EAAMqC,YAC5CpC,EAAAC,EAAAC,cAAA,OACEmC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAENzC,EAAAC,EAAAC,cAAC8B,EAAD,CACEV,MAAOvB,EAAMuB,MACboB,EAAE,sNACFF,KAAK,yPCtBf,IAAMG,EAAWnC,IAAOC,OAAVmC,IAEF,SAAA7C,GAAK,OAAMA,EAAMuB,MAAMS,SAA8B,MAAnB,mBAGxCc,EAASrC,IAAOyB,KAAVa,IACF,SAAA/C,GAAK,OAAMA,EAAMuB,MAAMS,SAAoB,QAAT,SAG7B,SAASgB,EAAGhD,GACzB,OACEC,EAAAC,EAAAC,cAACyC,EAAD,CAAUrB,MAAOvB,EAAMuB,MAAOhB,QAASP,EAAMiD,aAC3ChD,EAAAC,EAAAC,cAAA,OACEmC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAENzC,EAAAC,EAAAC,cAAC2C,EAAD,CACEvB,MAAOvB,EAAMuB,MACboB,EAAE,kOACFF,KAAK,YCpBA,SAASS,EAASlD,GAC/B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,iDACAF,EAAAC,EAAAC,cAACiC,EAAD,CAAKC,WAAYrC,EAAMqC,WAAYd,MAAOvB,EAAMuB,QAChDtB,EAAAC,EAAAC,cAAC6C,EAAD,CAAIC,YAAajD,EAAMiD,YAAa1B,MAAOvB,EAAMuB,oPCPvD,IAAMO,EAAYrB,IAAOC,OAAVyC,IAEH,SAAAnD,GAAK,OACbA,EAAMuB,MAAM6B,WAAZ,aAAA5B,OACiBxB,EAAMuB,MAAMS,SAAW,QAAU,QAC9C,QAGFC,EAAUxB,IAAOyB,KAAVmB,IACH,SAAArD,GAAK,OAAMA,EAAMuB,MAAMS,SAAoB,QAAT,SAG7B,SAASsB,EAAQtD,GAC9B,OACEC,EAAAC,EAAAC,cAACoD,EAAD,CAAWhC,MAAOvB,EAAMuB,MAAOhB,QAASP,EAAMwD,cAC5CvD,EAAAC,EAAAC,cAAA,OACEmC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAENzC,EAAAC,EAAAC,cAACsD,EAAD,CACElC,MAAOvB,EAAMuB,MACboB,EAAE,sNACFF,KAAK,yPCzBf,IAAMG,EAAWnC,IAAOC,OAAVgD,IAEF,SAAA1D,GAAK,OACbA,EAAMuB,MAAM6B,WACR,MADJ,aAAA5B,OAEkBxB,EAAMuB,MAAMS,SAAoB,QAAT,UAGvCc,EAASrC,IAAOyB,KAAVyB,IACF,SAAA3D,GAAK,OAAMA,EAAMuB,MAAMS,SAAoB,QAAT,SAG7B,SAAS4B,EAAO5D,GAC7B,OACEC,EAAAC,EAAAC,cAAC0D,EAAD,CAAUtC,MAAOvB,EAAMuB,MAAOhB,QAASP,EAAM8D,eAC3C7D,EAAAC,EAAAC,cAAA,OACEmC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAENzC,EAAAC,EAAAC,cAAC4D,EAAD,CACExC,MAAOvB,EAAMuB,MACboB,EAAE,kOACFF,KAAK,YCxBA,SAASuB,EAAehE,GACrC,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,8DACAF,EAAAC,EAAAC,cAACmD,EAAD,CAAS/B,MAAOvB,EAAMuB,MAAOiC,aAAcxD,EAAMwD,eACjDvD,EAAAC,EAAAC,cAACyD,EAAD,CAAQrC,MAAOvB,EAAMuB,MAAOuC,cAAe9D,EAAM8D,gLCLvD,IAAMG,EAAYxD,IAAOmB,IAAVsC,IACO,SAAAlE,GAAK,OAAKA,EAAMuB,MAAMS,SAAW,QAAU,SAKlD,SAASmC,EAAUnE,GAEhC,OADAoE,QAAQC,IAAIrE,EAAMsE,OAEhBrE,EAAAC,EAAAC,cAAC8D,EAAD,CAAW1C,MAAOvB,EAAMuB,OACtBtB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,8CACAF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,UACG,IACAH,EAAMsE,MACS,GAAftE,EAAMsE,MAAa,SAAW,YAInCrE,EAAAC,EAAAC,cAAA,SACEG,GAAG,kBACHiE,KAAK,QACLC,IAAI,IACJC,IAAI,KACJH,MAAOtE,EAAMsE,MACbI,SAAU1E,EAAM2E,8BAGpB1E,EAAAC,EAAAC,cAAA,0gBC9BN,IAAM8D,GAAYxD,IAAOmB,IAAVgD,KACO,SAAA5E,GAAK,OAAKA,EAAMuB,MAAMS,SAAW,QAAU,SAI3D6C,GAAYpE,IAAOqE,MAAMC,MAAM,CACnCR,KAAM,QADU9D,CAAHuE,KAGJ,SAAAhF,GAAK,OAAMA,EAAMuB,MAAMS,SAAoB,QAAT,QACvB,SAAAhC,GAAK,OAAMA,EAAMuB,MAAMS,SAAoB,QAAT,QAClC,SAAAhC,GAAK,OAAKA,EAAMuB,MAAMS,SAAW,OAAS,UAK3CvB,IAAOC,OAAVuE,KAEP,SAAAjF,GAAK,OAAKA,EAAMuB,MAAMS,SAAW,QAAU,QAC1C,SAAAhC,GAAK,OACbA,EAAMuB,MAAMS,SAAW,kBAAoB,mBAIhC,SAASmC,GAAUnE,GAChC,OACEC,EAAAC,EAAAC,cAAC+E,GAAD,CAAW3D,MAAOvB,EAAMuB,OACtBtB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,qDACAF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAC0E,GAAD,CACEtD,MAAOvB,EAAMuB,MACbgD,KAAK,OACLY,UAAU,IACVC,UAAU,IACVC,UAAQ,EACRf,MAAOtE,EAAMuB,MAAM+D,UAAUC,SAASC,KACtCd,SAAU1E,EAAMyF,wKCjC5B,IAAMC,GAAkBjF,IAAOC,OAAViF,KAEV,SAAA3F,GAAK,OAAKA,EAAMuB,MAAMS,SAAW,QAAU,QAC1C,SAAAhC,GAAK,OAAKA,EAAM4F,OAAS,MAAQ,OAAgB,SAAA5F,GAAK,OAChEA,EAAMuB,MAAMS,SAAW,QAAU,SAIpB,SAASiC,GAAUjE,GAChC,IAAI6F,EAoBJ,OAnBI7F,EAAMuB,MAAM+D,UAAUQ,UAAUD,QAClCA,EACE5F,EAAAC,EAAAC,cAACgE,EAAD,CACEQ,2BAA4B3E,EAAM2E,2BAClCL,MAAOtE,EAAMuB,MAAM+D,UAAUQ,UAAUC,SACvCxE,MAAOvB,EAAMuB,QAGRvB,EAAMuB,MAAM+D,UAAUC,SAASM,QACxCA,EACE5F,EAAAC,EAAAC,cAAC6F,GAAD,CACEzE,MAAOvB,EAAMuB,MACbkE,0BAA2BzF,EAAMyF,4BAG5BzF,EAAMuB,MAAM+D,UAAUW,MAC/BJ,EAAU,MAIV5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACuF,GAAD,CACEE,OAAQ5F,EAAMuB,MAAM+D,UAAUQ,UAAUD,QACxCtE,MAAOvB,EAAMuB,MACbhB,QAASP,EAAMkG,2BAHjB,cAOAjG,EAAAC,EAAAC,cAACuF,GAAD,CACEE,OAAQ5F,EAAMuB,MAAM+D,UAAUC,SAASM,QACvCtE,MAAOvB,EAAMuB,MACbhB,QAASP,EAAMmG,0BAHjB,aAOAlG,EAAAC,EAAAC,cAACuF,GAAD,CACEE,OAAQ5F,EAAMuB,MAAM+D,UAAUW,IAC9B1E,MAAOvB,EAAMuB,MACbhB,QAASP,EAAMoG,kBAHjB,QAQDP,22BCrDM,SAASQ,GAASrG,GAC/B,OACEC,EAAAC,EAAAC,cAACmG,GAAD,KACErG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAC+C,EAAD,CACEb,WAAYrC,EAAMqC,WAClBY,YAAajD,EAAMiD,YACnB1B,MAAOvB,EAAMuB,QAEftB,EAAAC,EAAAC,cAACoG,GAAD,CACEhF,MAAOvB,EAAMuB,MACb2E,0BAA2BlG,EAAMkG,0BACjCC,yBAA0BnG,EAAMmG,yBAChCC,iBAAkBpG,EAAMoG,iBACxBzB,2BAA4B3E,EAAM2E,2BAClCc,0BAA2BzF,EAAMyF,4BAEnCxF,EAAAC,EAAAC,cAAC6D,EAAD,CACEzC,MAAOvB,EAAMuB,MACbiC,aAAcxD,EAAMwD,aACpBM,cAAe9D,EAAM8D,gBAEvB7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMC,GAAG,2DACPpB,EAAAC,EAAAC,cAAA,mBAQZ,IAAMuB,GAASjB,IAAOmB,IAAV4E,kMC5BSC,eACnB,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKtF,MAAQ,CACX0F,OAAQ,GACRlG,MAAO,GACPC,OAAQ,GACRgB,UAAU,EACVoB,YAAY,EACZkC,UAAW,CACTQ,UAAW,CACTD,SAAS,EACTD,QAAQ,EACRG,SAAU,GAEZR,SAAU,CACRM,SAAS,EACTD,QAAQ,EACRJ,KAAM,SAERS,KAAK,IAGTS,EAAKlG,YAAckG,EAAKlG,YAAY0G,KAAjBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACnBA,EAAKrE,WAAaqE,EAAKrE,WAAW6E,KAAhBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAClBA,EAAKzD,YAAcyD,EAAKzD,YAAYiE,KAAjBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACnBA,EAAKlD,aAAekD,EAAKlD,aAAa0D,KAAlBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACpBA,EAAK5C,cAAgB4C,EAAK5C,cAAcoD,KAAnBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACrBA,EAAKR,0BAA4BQ,EAAKR,0BAA0BgB,KAA/BP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACjCA,EAAKP,yBAA2BO,EAAKP,yBAAyBe,KAA9BP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAChCA,EAAK/B,2BAA6B+B,EAAK/B,2BAA2BuC,KAAhCP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAClCA,EAAKjB,0BAA4BiB,EAAKjB,0BAA0ByB,KAA/BP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACjCA,EAAKN,iBAAmBM,EAAKN,iBAAiBc,KAAtBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KA/BZA,mFAkCM,IAAAU,EAAAP,KAElBQ,MACE,0IAECC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAC,GACJH,EAAKK,SAAS,CACZR,OAAQM,EAASN,SAGnB,IAAIS,EAASC,KAAKC,MAAMD,KAAKD,SAAWN,EAAK7F,MAAM0F,OAAOY,QACtD9G,EAAQqG,EAAK7F,MAAM0F,OAAOS,GAAQ3G,MAClCC,EAASoG,EAAK7F,MAAM0F,OAAOS,GAAQ1G,OACvCoG,EAAKK,SAAS,CACZ1G,QACAC,aAGH8G,MAAM,SAAAC,GAAG,OAAI3D,QAAQC,IAAI,yBAA0B0D,2CAKtD,IAAIL,EAASC,KAAKC,MAAMD,KAAKD,SAAWb,KAAKtF,MAAM0F,OAAOY,QACtD9G,EAAQ8F,KAAKtF,MAAM0F,OAAOS,GAAQ3G,MAClCC,EAAS6F,KAAKtF,MAAM0F,OAAOS,GAAQ1G,OACvC6F,KAAKY,SAAS,CACZ1G,QACAC,WAEFoD,QAAQC,IAAI,sDAKZwC,KAAKY,SAAS,CACZzF,UAAU,0CAMZ6E,KAAKY,SAAS,CACZzF,UAAU,2CAMZ6E,KAAKY,SAAS,CACZrE,YAAY,4CAMdyD,KAAKY,SAAS,CACZrE,YAAY,wDAMd4E,cAAcnB,KAAKoB,YACnBC,aAAarB,KAAKsB,SAElBtB,KAAKY,SAAS,CACZnC,UAAW,CACTQ,UAAW,CACTD,SAAS,EACTD,QAAQ,EACRG,SAAU,GAEZR,SAAU,CACRM,SAAS,EACTD,QAAQ,EACRJ,KAAM,SAIZqB,KAAKvB,UAAUuB,KAAKtF,MAAM+D,UAAUQ,UAAUC,6DAI9CiC,cAAcnB,KAAKoB,YACnBC,aAAarB,KAAKsB,SAClBtB,KAAKY,SAAS,CACZnC,UAAW,CACTQ,UAAW,CACTD,SAAS,EACTD,QAAQ,EACRG,SAAU,GAEZR,SAAU,CACRM,SAAS,EACTD,QAAQ,EACRJ,KAAM,SAERS,KAAK,wDAMgBmC,GACzBA,EAAEC,UACFxB,KAAKY,SAAS,CACZnC,UAAW,CACTQ,UAAW,CACTD,SAAS,EACTD,QAAQ,EACRG,SAAUqC,EAAEjH,OAAOmD,OAErBiB,SAAU,CACRM,SAAS,EACTD,QAAQ,EACRJ,KAAM,MAERS,KAAK,KAGTY,KAAKvB,UAAUuB,KAAKtF,MAAM+D,UAAUQ,UAAUC,4DAItBqC,GAAG,IAAAE,EAAAzB,KAC3BzC,QAAQC,IAAI+D,EAAEjH,OAAOmD,OACrBuC,KAAKY,SACH,CACEnC,UAAW,CACTQ,UAAW,CACTD,SAAS,EACTD,QAAQ,EACRG,SAAU,GAEZR,SAAU,CACRM,SAAS,EACTD,QAAQ,EACRJ,KAAM4C,EAAEjH,OAAOmD,OAEjB2B,KAAK,IAIT,WACE7B,QAAQC,IAAIiE,EAAK/G,MAAM+D,UAAUC,SAASC,MAC1C,IAAI+C,EAAM,IAAIC,KACVC,EACe,KAAjBF,EAAIG,WAA0C,IAAnBH,EAAII,aAE7BC,EAC2D,KAA7DC,SAASP,EAAK/G,MAAM+D,UAAUC,SAASC,KAAKsD,MAAM,KAAK,IACM,IAA7DD,SAASP,EAAK/G,MAAM+D,UAAUC,SAASC,KAAKsD,MAAM,KAAK,IAGzD,GAAIL,GAAmBG,EACPG,WAAW,WACvB,OAAOT,EAAKhD,UAAU,KACrB,MAAemD,EAAkBG,QAEtBG,WAAW,WACvB,OAAOT,EAAKhD,UAAU,KACrBsD,EAAqBH,uCAStB1C,GAAU,IAAAiD,EAAAnC,KAClBA,KAAKrG,cACLqG,KAAKoB,WAAagB,YAAY,kBAAMD,EAAKxI,eAA0B,KAAXuF,8CAIxDiC,cAAcnB,KAAKoB,YACnBC,aAAarB,KAAKsB,SAElBtB,KAAKY,SAAS,CACZnC,UAAW,CACTQ,UAAW,CACTD,SAAS,EACTD,QAAQ,EACRG,SAAU,GAEZR,SAAU,CACRM,SAAS,EACTD,QAAQ,EACRJ,KAAM,SAERS,KAAK,sCAKF,IAAAiD,EAAArC,KACP,OACE5G,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAACgJ,EAAAjJ,EAAD,CAAYkJ,QAASvC,KAAKtF,MAAM6B,YAE9BnD,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,CAAezI,MAAOiG,KAAKtF,MAAMS,SAAWsH,GAAYC,IACtDtJ,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,KAEEvJ,EAAAC,EAAAC,cAACsJ,GAAD,KACExJ,EAAAC,EAAAC,cAACuJ,EAAA,EAAD,CACExH,KAAK,kDACLyH,OAAK,EACLC,OAAQ,kBACN3J,EAAAC,EAAAC,cAACsB,EAAD,CACEF,MAAO2H,EAAK3H,MACZf,YAAa0I,EAAK1I,YAClBO,MAAOmI,EAAK3H,MAAMR,MAClBC,OAAQkI,EAAK3H,MAAMP,YAIzBf,EAAAC,EAAAC,cAACuJ,EAAA,EAAD,CACExH,KAAK,0DACL0H,OAAQ,kBACN3J,EAAAC,EAAAC,cAACkG,GAAD,CACEhE,WAAY6G,EAAK7G,WACjBY,YAAaiG,EAAKjG,YAClBO,aAAc0F,EAAK1F,aACnBM,cAAeoF,EAAKpF,cACpBvC,MAAO2H,EAAK3H,MACZ2E,0BAA2BgD,EAAKhD,0BAChCC,yBAA0B+C,EAAK/C,yBAC/BC,iBAAkB8C,EAAK9C,iBACvBzB,2BACEuE,EAAKvE,2BAEPc,0BAA2ByD,EAAKzD,6BAGpCkE,OAAK,OAII,aArRM7I,aA6R3BwI,GAAY,CAChBzI,MAAO,QACPgJ,gBAAiB,QAGbN,GAAa,CACjB1I,MAAO,OACPgJ,gBAAiB,SAIbJ,GAAehJ,IAAOmB,IAAVkI,KACP,SAAA9J,GAAK,OAAIA,EAAMY,MAAMC,OACV,SAAAb,GAAK,OAAIA,EAAMY,MAAMiJ,iBAE9B,SAAA7J,GAAK,OAAIA,EAAMY,MAAMC,QC7SdkJ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASR,OAAO3J,EAAAC,EAAAC,cAACkK,GAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpD,KAAK,SAAAqD,GACjCA,EAAaC","file":"static/js/main.b23ba0e1.chunk.js","sourcesContent":["import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nexport default function QuoteButton(props) {\r\n  return (\r\n    <div className=\"quoteButton\">\r\n      <Button id=\"new-quote\" onClick={props.updateQuote}>\r\n        Get a new quote!\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Button = styled.button`\r\n  color: ${props => props.theme.color};\r\n  font-size: 16px;\r\n  font-family: \"Press Start 2P\";\r\n  background-color: #ffffff00;\r\n  padding: 20px 20px 20px 20px;\r\n  border-radius: 4px;\r\n  border-color: ${props => props.theme.color};\r\n`\r\n","import React from \"react\"\r\n\r\nfunction Component(props) {\r\n  return (\r\n    <div className=\"quote\">\r\n      <h1 id=\"text\">“ {props.quote} ”</h1>\r\n      <h4 id=\"author\">{props.author}</h4>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Component\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n      <h5>\r\n        a random quote machine by{\" \"}\r\n        <a href=\"https://ma12.co\" target=\"blank\">\r\n          ma12.co\r\n        </a>\r\n      </h5>\r\n      <Link to=\"https://ma12-co.github.io/random-quote-machine/settings\">\r\n        <h5>⚙ Settings</h5>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\n\r\nexport default function(props) {\r\n  let quote = props.state.quote\r\n  let author = props.state.author\r\n  return (\r\n    <div className=\"social\">\r\n      <a\r\n        href={`https://twitter.com/intent/tweet?hashtags=quotes&related=randomquotemachine&text=${quote +\r\n          \" - \" +\r\n          author}`}\r\n        target=\"blank\"\r\n      >\r\n        <i className=\"fab fa-twitter\" />\r\n        <h5>Tweet this quote</h5>\r\n      </a>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nimport QuoteButton from \"./components/QuoteButton.js\"\nimport Quote from \"./components/Quote.js\"\nimport Footer from \"./components/Footer.js\"\nimport Social from \"./components/Social\"\n\nexport default function Home(props) {\n  return (\n    <Layout>\n      <div className=\"App\" id=\"quote-box\">\n        <Quote quote={props.quote} author={props.author} />\n        <Social state={props.state} />\n        <QuoteButton updateQuote={props.updateQuote} />\n        <Footer />\n      </div>\n    </Layout>\n  )\n}\n\nconst Layout = styled.div`\n  .App {\n    text-align: center;\n    display: grid;\n    font-size: calc(10px + 2vmin);\n    height: 100vh;\n    grid-template-columns: repeat(12, 1fr);\n    grid-template-rows: repeat(12, 1fr);\n    grid-template-areas:\n      \". . . . . . . . . . . .\"\n      \". q q q q q q q q q q .\"\n      \". q q q q q q q q q q .\"\n      \". q q q q q q q q q q .\"\n      \". q q q q q q q q q q .\"\n      \". q q q q q q q q q q .\"\n      \". q q q q q q q q q q .\"\n      \". q q q q q q q q q q .\"\n      \". s s s s s s s s s s .\"\n      \". b b b b b b b b b b .\"\n      \". . . . . . . . . . . .\"\n      \". f f f f f f f f f f .\";\n  }\n\n  .quote {\n    grid-area: q;\n  }\n\n  .social {\n    grid-area: s;\n  }\n\n  .quoteButton {\n    grid-area: b;\n  }\n\n  .footer {\n    grid-area: f;\n  }\n`\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst YesButton = styled.button`\r\n  background-color: transparent;\r\n  border: ${props => (props.state.darkMode ? \"2px solid white\" : \"0px\")};\r\n  padding: 0px 3px 0px 3px;\r\n`\r\nconst YesIcon = styled.path`\r\n  fill: ${props => (!props.state.darkMode ? \"blue\" : \"white\")};\r\n`\r\n\r\nexport default function Yes(props) {\r\n  return (\r\n    <YesButton state={props.state} onClick={props.darkModeOn}>\r\n      <svg\r\n        width=\"39\"\r\n        height=\"39\"\r\n        viewBox=\"0 0 39 39\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <YesIcon\r\n          state={props.state}\r\n          d=\"M14.4284 28V25.2H11.7143V22.4H9V19.6H14.4286V22.4L15.7856 22.4L15.7856 25.2H17.1427H18.4999V22.4H19.857V19.6H22.5713V16.8H25.2855V14H30.7141V16.8H27.9998V19.6H25.2855V22.4H22.5713L22.5713 25.2H19.857V28H14.4284Z\"\r\n          fill=\"#0000FF\"\r\n        />\r\n      </svg>\r\n    </YesButton>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst NoButton = styled.button`\r\n  background-color: transparent;\r\n  border: ${props => (!props.state.darkMode ? \"2px solid blue\" : \"0px\")};\r\n  padding: 0px 3px 0px 3px;\r\n`\r\nconst NoIcon = styled.path`\r\n  fill: ${props => (!props.state.darkMode ? \"blue\" : \"white\")};\r\n`\r\n\r\nexport default function No(props) {\r\n  return (\r\n    <NoButton state={props.state} onClick={props.darkModeOff}>\r\n      <svg\r\n        width=\"39\"\r\n        height=\"39\"\r\n        viewBox=\"0 0 39 39\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <NoIcon\r\n          state={props.state}\r\n          d=\"M10 27.5V24.7H12.7143V21.9H15.4286V19.1H12.7143V16.3H10V13.5H15.4286V16.3H18.1429V19.1H20.8571V16.3H23.5714V13.5H29V16.3H26.2857V19.1H23.5714V21.9H26.2857V24.7H29V27.5H23.5714V24.7H20.8571V21.9H18.1429V24.7H15.4286V27.5H10Z\"\r\n          fill=\"white\"\r\n        />\r\n      </svg>\r\n    </NoButton>\r\n  )\r\n}\r\n","import React from \"react\"\r\n\r\nimport Yes from \"./Yes\"\r\nimport No from \"./No\"\r\n\r\nexport default function DarkMode(props) {\r\n  return (\r\n    <div className=\"darkMode\">\r\n      <h3>🌃 Dark Mode 🌃</h3>\r\n      <Yes darkModeOn={props.darkModeOn} state={props.state} />\r\n      <No darkModeOff={props.darkModeOff} state={props.state} />\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst YesButton = styled.button`\r\n  background-color: transparent;\r\n  border: ${props =>\r\n    props.state.fullScreen\r\n      ? `2px solid ${props.state.darkMode ? \"white\" : \"blue\"}`\r\n      : \"0px\"};\r\n  padding: 0px 3px 0px 3px;\r\n`\r\nconst YesIcon = styled.path`\r\n  fill: ${props => (!props.state.darkMode ? \"blue\" : \"white\")};\r\n`\r\n\r\nexport default function FullYes(props) {\r\n  return (\r\n    <YesButton state={props.state} onClick={props.fullScreenOn}>\r\n      <svg\r\n        width=\"39\"\r\n        height=\"39\"\r\n        viewBox=\"0 0 39 39\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <YesIcon\r\n          state={props.state}\r\n          d=\"M14.4284 28V25.2H11.7143V22.4H9V19.6H14.4286V22.4L15.7856 22.4L15.7856 25.2H17.1427H18.4999V22.4H19.857V19.6H22.5713V16.8H25.2855V14H30.7141V16.8H27.9998V19.6H25.2855V22.4H22.5713L22.5713 25.2H19.857V28H14.4284Z\"\r\n          fill=\"#0000FF\"\r\n        />\r\n      </svg>\r\n    </YesButton>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst NoButton = styled.button`\r\n  background-color: transparent;\r\n  border: ${props =>\r\n    props.state.fullScreen\r\n      ? \"0px\"\r\n      : `2px solid ${!props.state.darkMode ? \"blue\" : \"white\"}`};\r\n  padding: 0px 3px 0px 3px;\r\n`\r\nconst NoIcon = styled.path`\r\n  fill: ${props => (!props.state.darkMode ? \"blue\" : \"white\")};\r\n`\r\n\r\nexport default function FullNo(props) {\r\n  return (\r\n    <NoButton state={props.state} onClick={props.fullScreenOff}>\r\n      <svg\r\n        width=\"39\"\r\n        height=\"39\"\r\n        viewBox=\"0 0 39 39\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <NoIcon\r\n          state={props.state}\r\n          d=\"M10 27.5V24.7H12.7143V21.9H15.4286V19.1H12.7143V16.3H10V13.5H15.4286V16.3H18.1429V19.1H20.8571V16.3H23.5714V13.5H29V16.3H26.2857V19.1H23.5714V21.9H26.2857V24.7H29V27.5H23.5714V24.7H20.8571V21.9H18.1429V24.7H15.4286V27.5H10Z\"\r\n          fill=\"white\"\r\n        />\r\n      </svg>\r\n    </NoButton>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport FullYes from \"./FullYes\"\r\nimport FullNo from \"./FullNo\"\r\n\r\nexport default function FullScreenMode(props) {\r\n  return (\r\n    <div className=\"fullScreen\">\r\n      <h3>🖥️ Fullscreen 🖥️</h3>\r\n      <FullYes state={props.state} fullScreenOn={props.fullScreenOn} />\r\n      <FullNo state={props.state} fullScreenOff={props.fullScreenOff} />\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { ThemeProvider } from \"styled-components\"\r\n\r\nconst Scheduler = styled.div`\r\n  border: 2px solid ${props => (props.state.darkMode ? \"white\" : \"blue\")}\r\n  padding: 10px 20px 10px 20px;\r\n  margin: 10px 0px 10px 0px;\r\n`\r\n\r\nexport default function HourBased(props) {\r\n  console.log(props.value)\r\n  return (\r\n    <Scheduler state={props.state}>\r\n      <form>\r\n        <h5>Your quote will be updated every</h5>\r\n        <span>\r\n          <h1>\r\n            {\" \"}\r\n            {props.value}\r\n            {props.value == 1 ? \" hour!\" : \" hours!\"}\r\n          </h1>\r\n        </span>\r\n\r\n        <input\r\n          id=\"hourlyInterval \"\r\n          type=\"range\"\r\n          min=\"1\"\r\n          max=\"24\"\r\n          value={props.value}\r\n          onChange={props.activateHourBasedScheduler}\r\n        />\r\n      </form>\r\n      <h1 />\r\n    </Scheduler>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst Scheduler = styled.div`\r\n  border: 2px solid ${props => (props.state.darkMode ? \"white\" : \"blue\")}\r\n  padding: 10px 20px 10px 20px;\r\n  margin: 10px 0px 10px 0px;\r\n`\r\nconst TimeInput = styled.input.attrs({\r\n  type: \"time\"\r\n})`\r\n  color: ${props => (!props.state.darkMode ? \"blue\" : \"white\")}\r\n  border: 0px solid ${props => (!props.state.darkMode ? \"blue\" : \"white\")};\r\n  background-color: ${props => (props.state.darkMode ? \"blue\" : \"white\")}\r\n  border-radius: 15px;\r\n  padding:20px\r\n`\r\n\r\nconst SubmitButton = styled.button`\r\n  background-color: transparent;\r\n  color: ${props => (props.state.darkMode ? \"white\" : \"blue\")};\r\n  border: ${props =>\r\n    props.state.darkMode ? \"2px solid white\" : \"2px solid blue\"};\r\n  padding: 10px 20px 10px 20px;\r\n`\r\n\r\nexport default function HourBased(props) {\r\n  return (\r\n    <Scheduler state={props.state}>\r\n      <form>\r\n        <h5>Your quote will be updated every day at</h5>\r\n        <span>\r\n          <TimeInput\r\n            state={props.state}\r\n            type=\"time\"\r\n            minLength=\"1\"\r\n            maxLength=\"2\"\r\n            required\r\n            value={props.state.scheduler.dayBased.time}\r\n            onChange={props.activateDayBasedScheduler}\r\n          />\r\n        </span>\r\n      </form>\r\n    </Scheduler>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nimport HourBased from \"./HourBased\"\r\nimport DayBased from \"./DayBased\"\r\n\r\nconst SchedulerButton = styled.button`\r\n  padding: 10px;\r\n  color: ${props => (props.state.darkMode ? \"white\" : \"blue\")};\r\n  border: ${props => (props.active ? \"2px\" : \"0px\")} solid ${props =>\r\n  props.state.darkMode ? \"white\" : \"blue\"};\r\n  }\r\n`\r\n\r\nexport default function Scheduler(props) {\r\n  let display\r\n  if (props.state.scheduler.hourBased.display) {\r\n    display = (\r\n      <HourBased\r\n        activateHourBasedScheduler={props.activateHourBasedScheduler}\r\n        value={props.state.scheduler.hourBased.interval}\r\n        state={props.state}\r\n      />\r\n    )\r\n  } else if (props.state.scheduler.dayBased.display) {\r\n    display = (\r\n      <DayBased\r\n        state={props.state}\r\n        activateDayBasedScheduler={props.activateDayBasedScheduler}\r\n      />\r\n    )\r\n  } else if (props.state.scheduler.off) {\r\n    display = null\r\n  }\r\n\r\n  return (\r\n    <div className=\"scheduler\">\r\n      <h3>⌛ Quote scheduler ⌛</h3>\r\n      <div className=\"tabs\">\r\n        <span>\r\n          <SchedulerButton\r\n            active={props.state.scheduler.hourBased.display}\r\n            state={props.state}\r\n            onClick={props.displayHourBasedScheduler}\r\n          >\r\n            Hour Based\r\n          </SchedulerButton>\r\n          <SchedulerButton\r\n            active={props.state.scheduler.dayBased.display}\r\n            state={props.state}\r\n            onClick={props.displayDayBasedScheduler}\r\n          >\r\n            Day based\r\n          </SchedulerButton>\r\n          <SchedulerButton\r\n            active={props.state.scheduler.off}\r\n            state={props.state}\r\n            onClick={props.turnOffScheduler}\r\n          >\r\n            Off\r\n          </SchedulerButton>\r\n        </span>\r\n        {display}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Link } from \"react-router-dom\"\r\n//import \"./Settings.css\"\r\n\r\nimport DarkMode from \"./DarkMode/DarkMode\"\r\nimport FullScreenMode from \"./FullScreenMode/FullScreenMode\"\r\nimport Scheduler from \"./Scheduler/Scheduler\"\r\n\r\nexport default function Settings(props) {\r\n  return (\r\n    <Layout>\r\n      <div className=\"Settings\">\r\n        <DarkMode\r\n          darkModeOn={props.darkModeOn}\r\n          darkModeOff={props.darkModeOff}\r\n          state={props.state}\r\n        />\r\n        <Scheduler\r\n          state={props.state}\r\n          displayHourBasedScheduler={props.displayHourBasedScheduler}\r\n          displayDayBasedScheduler={props.displayDayBasedScheduler}\r\n          turnOffScheduler={props.turnOffScheduler}\r\n          activateHourBasedScheduler={props.activateHourBasedScheduler}\r\n          activateDayBasedScheduler={props.activateDayBasedScheduler}\r\n        />\r\n        <FullScreenMode\r\n          state={props.state}\r\n          fullScreenOn={props.fullScreenOn}\r\n          fullScreenOff={props.fullScreenOff}\r\n        />\r\n        <div className=\"exitButton\">\r\n          <Link to=\"https://ma12-co.github.io/random-quote-machine/settings\">\r\n            <h1>X</h1>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst Layout = styled.div`\r\n  .Settings {\r\n    text-align: left;\r\n    display: grid;\r\n    font-size: calc(10px + 2vmin);\r\n    height: 100vh;\r\n    grid-template-columns: repeat(12, 1fr);\r\n    grid-template-rows: repeat(12, 1fr);\r\n    grid-template-areas:\r\n      \". . . . . . . . . . . .\"\r\n      \". . . . . . . . . . x .\"\r\n      \". . d d d d d d d d . .\"\r\n      \". . . . . . . . . . . .\"\r\n      \". . f f f f f f f f . .\"\r\n      \". . . . . . . . . . . .\"\r\n      \". . s s s s s s s s . .\"\r\n      \". . s s s s s s s s . .\"\r\n      \". . . . . . . . . . . .\"\r\n      \". . . . . . . . . . . .\"\r\n      \". . . . . . . . . . . .\"\r\n      \". . . . . . . . . . . .\";\r\n  }\r\n\r\n  .darkMode {\r\n    grid-area: d;\r\n  }\r\n\r\n  .scheduler {\r\n    grid-area: s;\r\n  }\r\n\r\n  .fullScreen {\r\n    grid-area: f;\r\n  }\r\n\r\n  .exitButton {\r\n    grid-area: x;\r\n  }\r\n`\r\n","//TODO:\r\n//style the hour input field and change the design so it's more understandeable\r\n\r\nimport React, { Component } from \"react\"\r\nimport { BrowserRouter, Route } from \"react-router-dom\"\r\nimport styled from \"styled-components\"\r\nimport { ThemeProvider } from \"styled-components\"\r\nimport Fullscreen from \"react-full-screen\"\r\n\r\nimport \"./global.css\"\r\nimport Home from \"./Home\"\r\nimport Settings from \"./Settings\"\r\n\r\nexport default class App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      quotes: {},\r\n      quote: \"\",\r\n      author: \"\",\r\n      darkMode: true,\r\n      fullScreen: false,\r\n      scheduler: {\r\n        hourBased: {\r\n          display: false,\r\n          active: false,\r\n          interval: 1\r\n        },\r\n        dayBased: {\r\n          display: false,\r\n          active: false,\r\n          time: \"09:00\"\r\n        },\r\n        off: true\r\n      }\r\n    }\r\n    this.updateQuote = this.updateQuote.bind(this)\r\n    this.darkModeOn = this.darkModeOn.bind(this)\r\n    this.darkModeOff = this.darkModeOff.bind(this)\r\n    this.fullScreenOn = this.fullScreenOn.bind(this)\r\n    this.fullScreenOff = this.fullScreenOff.bind(this)\r\n    this.displayHourBasedScheduler = this.displayHourBasedScheduler.bind(this)\r\n    this.displayDayBasedScheduler = this.displayDayBasedScheduler.bind(this)\r\n    this.activateHourBasedScheduler = this.activateHourBasedScheduler.bind(this)\r\n    this.activateDayBasedScheduler = this.activateDayBasedScheduler.bind(this)\r\n    this.turnOffScheduler = this.turnOffScheduler.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    //fetch data from the quotes api\r\n    fetch(\r\n      \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"\r\n    )\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        this.setState({\r\n          quotes: response.quotes\r\n        })\r\n        //randomize the selection of a quote\r\n        let random = Math.floor(Math.random() * this.state.quotes.length)\r\n        let quote = this.state.quotes[random].quote\r\n        let author = this.state.quotes[random].author\r\n        this.setState({\r\n          quote,\r\n          author\r\n        })\r\n      })\r\n      .catch(err => console.log(\"error while fetching, \", err))\r\n  }\r\n\r\n  //this method updates the quote with another random quote, same logic as in componentDidMount lifecycle method\r\n  updateQuote() {\r\n    let random = Math.floor(Math.random() * this.state.quotes.length)\r\n    let quote = this.state.quotes[random].quote\r\n    let author = this.state.quotes[random].author\r\n    this.setState({\r\n      quote,\r\n      author\r\n    })\r\n    console.log(\"quote updated\")\r\n  }\r\n\r\n  //sets the darkmode on\r\n  darkModeOn() {\r\n    this.setState({\r\n      darkMode: true\r\n    })\r\n  }\r\n\r\n  //sets the darkmode off\r\n  darkModeOff() {\r\n    this.setState({\r\n      darkMode: false\r\n    })\r\n  }\r\n\r\n  //sets fullscreen on with the react-full-screen\r\n  fullScreenOn() {\r\n    this.setState({\r\n      fullScreen: true\r\n    })\r\n  }\r\n\r\n  //sets fullscreen on with the react-full-screen\r\n  fullScreenOff() {\r\n    this.setState({\r\n      fullScreen: false\r\n    })\r\n  }\r\n\r\n  //displays the HourBased componentand takes out the\r\n  displayHourBasedScheduler() {\r\n    clearInterval(this.intervalId)\r\n    clearTimeout(this.timerId)\r\n\r\n    this.setState({\r\n      scheduler: {\r\n        hourBased: {\r\n          display: true,\r\n          active: true,\r\n          interval: 1\r\n        },\r\n        dayBased: {\r\n          display: false,\r\n          active: false,\r\n          time: null\r\n        }\r\n      }\r\n    })\r\n    this.scheduler(this.state.scheduler.hourBased.interval)\r\n  }\r\n\r\n  displayDayBasedScheduler() {\r\n    clearInterval(this.intervalId)\r\n    clearTimeout(this.timerId)\r\n    this.setState({\r\n      scheduler: {\r\n        hourBased: {\r\n          display: false,\r\n          active: false,\r\n          interval: 1\r\n        },\r\n        dayBased: {\r\n          display: true,\r\n          active: true,\r\n          time: \"09:00\"\r\n        },\r\n        off: false\r\n      }\r\n    })\r\n  }\r\n\r\n  //activates the hour based quote automatic update\r\n  activateHourBasedScheduler(e) {\r\n    e.persist()\r\n    this.setState({\r\n      scheduler: {\r\n        hourBased: {\r\n          display: true,\r\n          active: true,\r\n          interval: e.target.value\r\n        },\r\n        dayBased: {\r\n          display: false,\r\n          active: false,\r\n          time: null\r\n        },\r\n        off: false\r\n      }\r\n    })\r\n    this.scheduler(this.state.scheduler.hourBased.interval)\r\n  }\r\n\r\n  //activates the day based quote automatic update\r\n  activateDayBasedScheduler(e) {\r\n    console.log(e.target.value)\r\n    this.setState(\r\n      {\r\n        scheduler: {\r\n          hourBased: {\r\n            display: false,\r\n            active: false,\r\n            interval: 1\r\n          },\r\n          dayBased: {\r\n            display: true,\r\n            active: true,\r\n            time: e.target.value\r\n          },\r\n          off: false\r\n        }\r\n      },\r\n      //this next function is psased in as callback to setstate in order to be sure that it executes after the state has been updated. If it would have been called after setstate, the state wouldn't have been updated\r\n      () => {\r\n        console.log(this.state.scheduler.dayBased.time)\r\n        let now = new Date() //gets the date\r\n        let nowMilliseconds =\r\n          now.getHours() * 3600000 + now.getMinutes() * 60000 //converts the hours and minutes into milliseconds\r\n\r\n        let targetMilliseconds =\r\n          parseInt(this.state.scheduler.dayBased.time.split(\":\")[0]) * 3600000 +\r\n          parseInt(this.state.scheduler.dayBased.time.split(\":\")[1]) * 60000 //converts the scheduled hour into milliseconds, this is where we need the state to be updated to the last input\r\n\r\n        //doing the math to know how much i have to wait before launching this.scheduler() with an argument of 24 since this is the dayBased scheduler\r\n        if (nowMilliseconds >= targetMilliseconds) {\r\n          let timerId = setTimeout(() => {\r\n            return this.scheduler(24)\r\n          }, 24 * 3600000 - nowMilliseconds + targetMilliseconds)\r\n        } else {\r\n          let timerId = setTimeout(() => {\r\n            return this.scheduler(24)\r\n          }, targetMilliseconds - nowMilliseconds)\r\n        }\r\n      }\r\n    )\r\n\r\n    // setTimeout(this.scheduler(), //time inputted-actual time )\r\n  }\r\n\r\n  //scheduler method: calls the update method continuously\r\n  scheduler(interval) {\r\n    this.updateQuote()\r\n    this.intervalId = setInterval(() => this.updateQuote(), interval * 3600000)\r\n  }\r\n  //turns off the automatic updates of the quote\r\n  turnOffScheduler() {\r\n    clearInterval(this.intervalId)\r\n    clearTimeout(this.timerId)\r\n\r\n    this.setState({\r\n      scheduler: {\r\n        hourBased: {\r\n          display: false,\r\n          active: false,\r\n          interval: 1\r\n        },\r\n        dayBased: {\r\n          display: false,\r\n          active: false,\r\n          time: \"09:00\"\r\n        },\r\n        off: true\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* fullscreen wrapper for react-full-screen */}\r\n        <Fullscreen enabled={this.state.fullScreen}>\r\n          {/* themeprovider that changes between light and dark depending on the state */}\r\n          <ThemeProvider theme={this.state.darkMode ? DarkTheme : LightTheme}>\r\n            <BrowserRouter>\r\n              {/* applyes my global styles (at the bottom of the page) */}\r\n              <GlobalStyles>\r\n                <Route\r\n                  path=\"https://ma12-co.github.io/random-quote-machine/\"\r\n                  exact\r\n                  render={() => (\r\n                    <Home\r\n                      state={this.state}\r\n                      updateQuote={this.updateQuote}\r\n                      quote={this.state.quote}\r\n                      author={this.state.author}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"https://ma12-co.github.io/random-quote-machine/settings\"\r\n                  render={() => (\r\n                    <Settings\r\n                      darkModeOn={this.darkModeOn}\r\n                      darkModeOff={this.darkModeOff}\r\n                      fullScreenOn={this.fullScreenOn}\r\n                      fullScreenOff={this.fullScreenOff}\r\n                      state={this.state}\r\n                      displayHourBasedScheduler={this.displayHourBasedScheduler}\r\n                      displayDayBasedScheduler={this.displayDayBasedScheduler}\r\n                      turnOffScheduler={this.turnOffScheduler}\r\n                      activateHourBasedScheduler={\r\n                        this.activateHourBasedScheduler\r\n                      }\r\n                      activateDayBasedScheduler={this.activateDayBasedScheduler}\r\n                    />\r\n                  )}\r\n                  exact\r\n                />\r\n              </GlobalStyles>\r\n            </BrowserRouter>\r\n          </ThemeProvider>{\" \"}\r\n        </Fullscreen>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n//defines the themes for Themeprovider\r\nconst DarkTheme = {\r\n  color: \"white\",\r\n  backgroundColor: \"blue\"\r\n}\r\n\r\nconst LightTheme = {\r\n  color: \"blue\",\r\n  backgroundColor: \"white\"\r\n}\r\n\r\n//these are my global styles that change according to the theme applied to an outer div that wraps all the app\r\nconst GlobalStyles = styled.div`\r\n  color: ${props => props.theme.color};\r\n  background-color: ${props => props.theme.backgroundColor};\r\n  a {\r\n    color: ${props => props.theme.color};\r\n    &:hover {\r\n      color: red;\r\n    }\r\n  }\r\n`\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\")\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\")\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App.js\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}